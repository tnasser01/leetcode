class Solution {
    public int trap(int[] height) {
        
        if(height.length==0) return 0;
        int[] left = new int[height.length];
        int[] right = new int[height.length];
        
        int maxHeight = height[0];
        for(int i=0; i < left.length; i++) {
            maxHeight = Math.max(maxHeight, height[i]);
            left[i] = maxHeight;
        }
        
        maxHeight = height[height.length-1];
        for(int i=right.length-1; i >= 0; i--) {
            maxHeight = Math.max(maxHeight, height[i]);
            right[i] = maxHeight;
        }
        
        int total = 0;
        for(int i=0; i < height.length; i++) {
            total+= (Math.min(left[i], right[i]) - height[i]);
        }
        
        return total;
    }
}
