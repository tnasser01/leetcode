/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    List<Double> averages = new ArrayList<Double>();
    Queue<TreeNode> queue = new LinkedList<TreeNode>();
    
    public List<Double> averageOfLevels(TreeNode root) {
        if(root == null) return averages;
        
        queue.offer(root);
        int size = 1;
        double sum = 0;
        while(!queue.isEmpty()) {
            for(int i=0; i < size; i++) {
                TreeNode curr = queue.poll();
                if(curr!=null) {
                    sum+=curr.val;
                    if(curr.left!=null)queue.offer(curr.left);
                    if(curr.right!=null)queue.offer(curr.right);
                }
            }
            if(size>0)
                averages.add(sum/size);
            size= queue.size();
            sum = 0;
        }
        return averages;
    }
}
