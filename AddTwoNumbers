/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        boolean carryOver = false;
        ListNode head = null;
        ListNode curr = null;
        
        while(l1 != null && l2 != null) {
            
            int sum = l1.val + l2.val;
            
            if(carryOver) { 
                sum++;
                carryOver = false;
            }
            
            if(sum > 9) {
                sum%=10;
                carryOver = true;
            }
            
            if(head == null) {
                head = new ListNode(sum);
                curr = head;
            } else {
                curr.next = new ListNode(sum);
                curr = curr.next;
            }
            
            l1 = l1.next;
            l2 = l2.next;    
        }
        
        while(l1 != null) {
            int val = l1.val;
            if(carryOver){
                val++;
                carryOver = false;
            }
            if(val > 9) {
                val%=10;
                carryOver = true;
            }
            curr.next = new ListNode(val);
            curr = curr.next;
            l1 = l1.next;
            
        }
        
        while(l2 != null) {
            int val = l2.val;
            if(carryOver){
                val++;
                carryOver = false;
            }
            if(val > 9) {
                val%=10;
                carryOver = true;
            }
            curr.next = new ListNode(val);
            curr = curr.next;
            l2 = l2.next;        
        }
        
        if(carryOver) {
            curr.next = new ListNode(1);
        }
        
        return head;
    }
}
